{
  "version": 3,
  "sources": ["../../src/main.ts", "../../src/browser.ts"],
  "sourcesContent": ["import { MeetergoSettings } from './declarations';\n\nexport class MeetergoIntegration {\n  constructor() {\n    const documentIsLoaded =\n      document &&\n      (document.readyState === 'complete' ||\n        document.readyState === 'interactive');\n\n    if (documentIsLoaded) {\n      this.init();\n    } else {\n      window.addEventListener('DOMContentLoaded', () => {\n        this.init();\n      });\n    }\n  }\n\n  public init(): void {\n    this.listenToForms();\n    this.addFloatingButton();\n    this.addModal();\n    this.parseIframes();\n    this.parseButtons();\n    this.addListeners();\n    this.addGeneralCss();\n  }\n\n  private addGeneralCss() {\n    const style = document.createElement('style');\n    style.textContent = /*css*/ `\n    .close-button {\n      all: unset;\n      position: absolute;\n      top: 16px;\n      right: 16px;\n      background: #fff;\n      border-radius: 100%;\n      width: 40px;\n      height: 40px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: color 350ms;\n      color: #9ca3af;\n      cursor: pointer;\n    }\n\n    .close-button:hover{\n      color: #000;\n    }\n\n    .meetergo-spinner {\n      position: absolute;\n      width: 48px;\n      height: 48px;\n      border: 6px solid #FFF;\n      border-bottom-color: #d1d5db;\n      border-radius: 50%;\n      display: inline-block;\n      box-sizing: border-box;\n      animation: rotation 1s linear infinite;\n    }\n\n    @keyframes rotation {\n      0% {\n          transform: rotate(0deg);\n      }\n      100% {\n          transform: rotate(360deg);\n      }\n    }\n    `;\n    document.head.appendChild(style);\n  }\n\n  public onFormSubmit(e: SubmitEvent): void {\n    const target = e.currentTarget as HTMLFormElement;\n    if (!target) return;\n\n    const targetListener = window.meetergoSettings?.formListeners.find(\n      (listener) => {\n        // Need to define `id`\n        if (!target.id) return false;\n        return target.id === listener.formId;\n      },\n    );\n    if (!targetListener) return;\n\n    e.preventDefault();\n    const formData = new FormData(target);\n    const data: Record<string, string> = {};\n    for (const [key, value] of formData) {\n      data[key] = value.toString();\n    }\n    window.meetergo.openModalWithContent({\n      link: targetListener.link,\n      existingParams: data,\n    });\n  }\n\n  private listenToForms(): void {\n    const forms = document.querySelectorAll('form');\n\n    for (const form of forms) {\n      form.addEventListener('submit', this.onFormSubmit, false);\n    }\n  }\n\n  private addFloatingButton(): void {\n    if (\n      window.meetergoSettings?.floatingButton &&\n      window.meetergoSettings?.floatingButton?.position &&\n      window.meetergoSettings?.floatingButton.link\n    ) {\n      const position = window.meetergoSettings?.floatingButton.position;\n      let button = document.createElement('button');\n      button.classList.add('meetergo-modal-button');\n      button.innerHTML =\n        window.meetergoSettings?.floatingButton?.text ?? 'Book appointment';\n\n      button.setAttribute('link', window.meetergoSettings.floatingButton.link);\n\n      // CSS\n      button.style.position = 'fixed';\n      position.includes('top')\n        ? (button.style.top = '0')\n        : (button.style.bottom = '0');\n      position.includes('left')\n        ? (button.style.left = '0')\n        : (button.style.right = '0');\n      button = this.meetergoStyleButton(button);\n\n      if (window.meetergoSettings?.floatingButton.backgroundColor)\n        button.style.backgroundColor =\n          window.meetergoSettings?.floatingButton.backgroundColor;\n      if (window.meetergoSettings?.floatingButton.textColor)\n        button.style.color = window.meetergoSettings?.floatingButton.textColor;\n\n      document.body.appendChild(button);\n    }\n  }\n\n  private addListeners(): void {\n    const buttons = document.getElementsByClassName('meetergo-modal-button');\n    for (const button of buttons) {\n      button.addEventListener('click', (e) => {\n        e.preventDefault();\n        const link = button.getAttribute('link') || button.getAttribute('href');\n        if (link) {\n          this.openModalWithContent({\n            link,\n          });\n        }\n      });\n    }\n\n    window.onmessage = (e) => {\n      const meetergoEvent = e.data as {\n        event: string;\n        data: unknown;\n      };\n      switch (meetergoEvent.event) {\n        case 'open-modal': {\n          const iframeParams = this.getParamsFromMainIframe();\n          const data = meetergoEvent.data as {\n            link: string;\n            params: Record<string, string>;\n          };\n          this.openModalWithContent({\n            link: data.link,\n            existingParams: { ...data.params, ...iframeParams },\n          });\n          break;\n        }\n        case 'close-modal': {\n          window.meetergo.closeModal();\n          break;\n        }\n        case 'booking-complete': {\n          window.meetergoSettings.onSuccess &&\n            window.meetergoSettings.onSuccess(meetergoEvent.data as string);\n          break;\n        }\n        case \"embed-resize\": {\n          if (!window.meetergoSettings?.enableAutoResize) break;\n          \n          const iframe = document.querySelector(\n            \".meetergo-iframe iframe\"\n          ) as HTMLElement | null;\n          const data = meetergoEvent.data as {\n            height: number; // height in px\n          };\n\n          if (!iframe) break;\n          iframe.style.height = `${data.height}px`;\n          break;\n        }\n      }\n    };\n  }\n\n  public getParamsFromMainIframe(): Record<string, string> {\n    const iframeParams: Record<string, string> = {};\n    const divIframe: HTMLElement | null =\n      document.querySelector('.meetergo-iframe');\n    if (divIframe) {\n      const linkAttr = divIframe.getAttribute('link');\n      if (linkAttr) {\n        const queryString = linkAttr.split('?')[1];\n        if (queryString) {\n          const urlParams = new URLSearchParams(queryString);\n          urlParams.forEach((value, key) => {\n            iframeParams[key] = value;\n          });\n        }\n      }\n    }\n    return iframeParams;\n  }\n\n  public openModalWithContent(settings: {\n    link: string;\n    existingParams?: Record<string, string>;\n  }): void {\n    if (window.meetergoSettings?.disableModal) {\n      return;\n    }\n    const { link, existingParams } = settings;\n    const iframe = document.createElement('iframe');\n    iframe.name = 'meetergo-embedded-modal';\n    const params = this.getPrifillParams(existingParams);\n    iframe.setAttribute('src', `${link}?${params}`);\n    iframe.style.width = '100%';\n    iframe.style.height = '100%';\n    iframe.style.border = 'none';\n    const modalContent = document.getElementById('meetergo-modal-content');\n    if (modalContent) {\n      modalContent.replaceChildren(iframe);\n    }\n    this.openModal();\n  }\n\n  private addModal(): void {\n    const modal = document.createElement('div');\n    modal.id = 'meetergo-modal';\n    modal.style.zIndex = '999999';\n    modal.style.position = 'fixed';\n    modal.style.transition = 'visibility 0s linear 0.1s,opacity 0.3s ease';\n    modal.style.top = '0';\n    modal.style.left = '0';\n    modal.style.width = '100%';\n    modal.style.height = '100%';\n    modal.style.display = 'flex';\n    modal.style.justifyContent = 'center';\n    modal.style.alignItems = 'center';\n    modal.style.visibility = 'hidden';\n    modal.style.opacity = '0';\n\n    const overlay = document.createElement('div');\n    overlay.style.zIndex = '1001';\n    overlay.style.position = 'fixed';\n    overlay.style.top = '0';\n    overlay.style.left = '0';\n    overlay.style.width = '100%';\n    overlay.style.height = '100%';\n    overlay.style.backgroundColor = 'rgba(0,0,0,0.6)';\n\n    const spinner = document.createElement('div');\n    spinner.className = 'meetergo-spinner';\n    spinner.style.zIndex = '1002';\n\n    overlay.onclick = () => window.meetergo.closeModal();\n\n    const content = document.createElement('div');\n    content.id = 'meetergo-modal-content';\n    content.style.zIndex = '1003';\n    content.style.position = 'relative';\n    content.style.width = '100%';\n    content.style.height = '100%';\n    content.style.backgroundColor = 'rgba(0,0,0,0)';\n    content.style.borderRadius = '0.7rem';\n    content.style.overflow = 'hidden';\n    content.style.padding = '16px';\n\n    const button = document.createElement('button');\n    button.className = 'close-button';\n    button.style.zIndex = '1004';\n    button.onclick = () => window.meetergo.closeModal();\n    button.innerHTML = /*html*/ `<svg\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      stroke-width=\"0\"\n      viewBox=\"0 0 512 512\"\n      height=\"24px\"\n      width=\"24px\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n      ></path>\n    </svg>`;\n\n    modal.appendChild(overlay);\n    modal.appendChild(content);\n    modal.appendChild(spinner);\n    modal.appendChild(button);\n\n    document.body.appendChild(modal);\n  }\n\n  public openModal(): void {\n    const modal = document.getElementById('meetergo-modal');\n    if (modal) {\n      modal.style.visibility = 'visible';\n      modal.style.opacity = '1';\n\n      const buttons = modal.getElementsByClassName('meetergo-spinner');\n\n      if (buttons.length > 0) {\n        const [button] = buttons;\n\n        if (button instanceof HTMLElement) {\n          button.style.visibility = 'visible';\n          button.style.opacity = '1';\n        }\n      }\n    }\n  }\n\n  public closeModal(preventClearContent?: boolean): void {\n    const modal = document.getElementById('meetergo-modal');\n    if (modal) {\n      // Hide Modal\n      modal.style.visibility = 'hidden';\n      modal.style.opacity = '0';\n      const buttons = modal.getElementsByClassName('meetergo-spinner');\n\n      if (buttons.length > 0) {\n        const [button] = buttons;\n\n        if (button instanceof HTMLElement) {\n          button.style.visibility = 'hidden';\n          button.style.opacity = '0';\n        }\n      }\n\n      if (!preventClearContent) {\n        // Clear modal content\n        const content = document.getElementById('meetergo-modal-content');\n        if (content) {\n          content.replaceChildren();\n        }\n      }\n    }\n  }\n\n  public parseIframes(): void {\n    const anchors = document.getElementsByClassName('meetergo-iframe');\n    const params = this.getPrifillParams();\n    for (const anchor of anchors) {\n      const iframe = document.createElement('iframe');\n\n      const link =\n        (anchor.getAttribute('link') || anchor.getAttribute('href')) ?? '';\n      iframe.setAttribute('src', `${link}?${params}`);\n      iframe.style.width = '100%';\n      iframe.style.height = '100%';\n      iframe.style.border = 'none';\n      iframe.style.minHeight = '690px';\n      anchor.replaceChildren(iframe);\n    }\n  }\n\n  public parseButtons(): void {\n    const buttons = document.getElementsByClassName('meetergo-styled-button');\n\n    for (let button of buttons) {\n      button = this.meetergoStyleButton(button as HTMLButtonElement);\n    }\n  }\n  private getWindowParams(): Record<string, string> {\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    const paramObj: Record<string, string> = {};\n    for (const value of params.keys()) {\n      const param = params.get(value);\n      if (param) {\n        paramObj[value] = param;\n      }\n    }\n    return paramObj;\n  }\n\n  private getPrifillParams(existingParams?: Record<string, string>): string {\n    const params: string[] = [];\n    let prefill = {\n      ...this.getWindowParams(),\n    };\n    if (window.meetergoSettings?.prefill) {\n      prefill = {\n        ...prefill,\n        ...window.meetergoSettings?.prefill,\n      };\n    }\n    prefill = {\n      ...prefill,\n      ...existingParams,\n    };\n    Object.entries(prefill).forEach(([key, value]) => {\n      params.push(`${key}=${encodeURIComponent(value)}`);\n    });\n    return params.join('&');\n  }\n\n  public setPrefill(prefill: MeetergoSettings['prefill']): void {\n    if (window.meetergoSettings) {\n      window.meetergoSettings.prefill = prefill;\n    }\n  }\n\n  private meetergoStyleButton(button: HTMLButtonElement): HTMLButtonElement {\n    button.style.margin = '0.5rem';\n    button.style.padding = '0.8rem';\n    button.style.fontWeight = 'bold';\n    button.style.color = 'white';\n    button.style.backgroundColor = '#0A64BC';\n    button.style.borderRadius = '0.5rem';\n    button.style.border = 'none';\n    button.style.cursor = 'pointer';\n    button.style.zIndex = '999';\n\n    return button;\n  }\n}\n\nexport const meetergo = new MeetergoIntegration();\n", "import { meetergo } from './main';\nwindow.meetergo = meetergo;\n"],
  "mappings": "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",
  "names": []
}
